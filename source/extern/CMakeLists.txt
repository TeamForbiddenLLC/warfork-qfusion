
if (NOT GAME_MODULES_ONLY)
  if(USE_GRAPHICS_NRI)
    option(BUILD_EXTERNAL OFF)
    option(ENABLE_HLSL OFF)
    option(ENABLE_OPT OFF)
    option(ENABLE_PCH OFF)
    option(ENABLE_CTEST OFF)

    add_subdirectory(glslang)
  endif()

if(USE_SYSTEM_ZLIB)
  find_package(ZLIB REQUIRED)

  add_library(ZLIB::ZLIB INTERFACE IMPORTED GLOBAL)
  target_link_libraries(ZLIB::ZLIB INTERFACE ZLIB::ZLIB)
else()
  option(ZLIB_BUILD_EXAMPLES "" OFF)
  add_subdirectory(zlib)
endif()

if (USE_SDL2)
  if (USE_SYSTEM_SDL2)
    find_package(SDL2 REQUIRED)

    add_library(SDL2 INTERFACE IMPORTED GLOBAL)
    target_link_libraries(SDL2 INTERFACE SDL2::SDL2)
  else()
    option(SDL_RPATH "" OFF)
    option(SDL_SHARED "" ON)
    option(SDL_STATIC "" OFF)
    option(SDL_SHARED_ENABLED_BY_DEFAULT"" OFF)
    option(SDL_TEST "" OFF)
    option(SDL2_DISABLE_INSTALL "" ON)
    
    add_subdirectory(SDL)
    qf_set_output_dir (SDL2 libs) 
  endif()
endif()


if(USE_SYSTEM_OGG)
  find_package(Ogg REQUIRED GLOBAL)
else()
  add_subdirectory(ogg)
  set_target_properties(ogg PROPERTIES FOLDER extern)
endif()

if(USE_SYSTEM_FREETYPE)
  find_package(Freetype REQUIRED GLOBAL)
else()
  add_subdirectory(freetype)
  add_library(Freetype::Freetype INTERFACE IMPORTED GLOBAL)
  target_link_libraries(Freetype::Freetype INTERFACE freetype)
endif()


if(USE_SYSTEM_VORBIS)
    find_package(Vorbis REQUIRED GLOBAL)

  # add_library(Vorbis::Vorbis INTERFACE IMPORTED GLOBAL)
  # target_link_libraries(Vorbis::Vorbis INTERFACE Vorbis::Vorbis)
else()
  if(NOT USE_SYSTEM_OGG)
    set(OGG_LIBRARY ogg)
    set(OGG_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/ogg/include)
  endif()
  add_subdirectory(vorbis)
endif()

  
if (USE_SYSTEM_OPENAL)
  find_package(OpenAL REQUIRED GLOBAL)
else()
  set(LIBTYPE STATIC)
  option(FORCE_STATIC_VCRT "" ON)
  option(ALSOFT_UTILS "" OFF)
  option(ALSOFT_EXAMPLES "" OFF)
  option(ALSOFT_UPDATE_BUILD_VERSION "" OFF)
  option(ALSOFT_INSTALL "" OFF)
  option(ALSOFT_INSTALL_CONFIG "" OFF)
  option(ALSOFT_INSTALL_HRTF_DATA "" OFF)
  option(ALSOFT_INSTALL_AMBDEC_PRESETS "" OFF)
  option(ALSOFT_INSTALL_EXAMPLES "" OFF)
  option(ALSOFT_INSTALL_UTILS "" OFF)
  add_subdirectory(openal-soft)
  set_target_properties(OpenAL PROPERTIES FOLDER extern/openal-soft)
  set_target_properties(common PROPERTIES FOLDER extern/openal-soft)
  set_target_properties(ex-common PROPERTIES FOLDER extern/openal-soft)
  target_compile_definitions(OpenAL PUBLIC AL_LIBTYPE_STATIC)
endif()



if(USE_SYSTEM_CURL)
    find_package(CURL REQUIRED GLOBAL)
else()
    if (NOT USE_SYSTEM_ZLIB)
      set(ZLIB_DIR "{CMAKE_CURRENT_SOURCE_DIR}/zlib")
    endif()
    set(CMAKE_DEBUG_POSTFIX "" CACHE STRING "Override CMAKE_DEBUG_POSTFIX, which curl sets to '-d'")
    option(BUILD_CURL_EXE "" OFF)
    option(BUILD_SHARED_LIBS "" OFF)
    option(CURL_STATICLIB "" ON)
    option(BUILD_MISC_DOCS "" OFF)
    option(ENABLE_MANUAL "" OFF)
    option(ENABLE_DOCS "" OFF)
    option(HTTP_ONLY "" ON)
    option(CURL_ZLIB "" OFF)
    option(CURL_USE_OPENSSL "" OFF)
    option(CURL_USE_LIBPSL "" OFF )
    option(BUILD_TESTING "" OFF )
    option(BUILD_EXAMPLES "" OFF )
    option(CURL_DISABLE_INSTALL "" OFF )
    set(CURL_CA_PATH "none" CACHE PATH "")
    add_subdirectory(curl)
endif()

endif()

set(STB_INCLUDE_DIR  ${CMAKE_CURRENT_SOURCE_DIR}/stb PARENT_SCOPE)

